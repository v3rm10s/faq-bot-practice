name: Build, Deploy, and Push

on:
  push:
    branches: [ "main" ]

env:
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY_NAME || 'faq-bot-practice' }}
  AWS_REGION: ${{ vars.AWS_REGION || 'ap-southeast-1' }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # These permissions are needed for the aws-actions/configure-aws-credentials action
    # to use OIDC for authentication, which is more secure than long-lived access keys.
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: 4. Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: 5. Terraform Init
      # You need to specify the path to your terraform files
      run: terraform -chdir=./terraform init

    - name: 6. Terraform Apply ECR Only
      # This surgically creates ONLY the ECR repo so we can push to it.
      # Replace 'aws_ecr_repository.faq-bot-practice' with the name from your .tf file
      run: terraform -chdir=./terraform apply -target=aws_ecr_repository.faq-bot-practice -auto-approve -var="ecr_image_identifier=placeholder"

    - name: 7. Build, Tag, and Push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        # Use the variable from your TF files for the repo name
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: 8. Terraform Apply Full
      # This applies all other changes, including updating App Runner with the new image
      run: terraform -chdir=./terraform apply -auto-approve -var="ecr_image_identifier=${{ steps.build-image.outputs.image }}"
