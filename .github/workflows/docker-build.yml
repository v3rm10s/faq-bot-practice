# Name of the workflow for the push
name: Docker Build CI

# 1. Trigger: This workflow runs on any push to the "main" branch.
on:
  push:
    branches: [ "main" ]

# A workflow is made of one or more jobs.
jobs:
  # We have one job named "build".
  build:
    # 2. Environment: The job will run on a fresh virtual machine running Ubuntu.
    runs-on: ubuntu-latest
    # permissions:
    #   contents: read
    #   packages: write

    # 3. Steps: A sequence of tasks to execute.
    steps:
    # First, check out the repository's code so the workflow can access it.
    - name: Checkout repository
      uses: actions/checkout@v4

    # Second, run the standard docker build command.
    - name: Build Docker image
      run: docker build . --file Dockerfile --tag my-faq-bot:latest

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build, tag, and push Docker image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository }}:${{ github.sha }}
        docker build . --tag $IMAGE_ID
        docker push $IMAGE_ID
  deploy:
    needs: build # Still depends on the build job
    runs-on: ubuntu-latest
    steps:
    # 1. AUTHENTICATE WITH THE REGISTRY (e.g., GHCR)
    # You cannot pull an image from a private registry without logging in first.
    # The 'build' job pushed the image, but this is a new, separate job on a new machine.
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # 2. AUTHENTICATE WITH THE CLOUD PROVIDER (AWS)
    # This step gives the workflow permission to command your AWS account.
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    # 3. EXECUTE THE DEPLOYMENT
    # Now that the job is authenticated with both the image source and the deployment target,
    # it can command App Runner to pull the new image.
    - name: Trigger AWS App Runner Deployment
      run: aws apprunner start-deployment --service-arn ${{ secrets.AWS_APP_RUNNER_SERVICE_ARN }}
